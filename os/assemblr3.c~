#include<stdio.h>
#include<stdlib.h>
#include<string.h>

typedef struct node
{
	char symb[20];
	int pos,addr,val,len;
	struct node *next;
}NODE;

int cnt=0;

NODE *first,*last;

void add_symb(char *s, int a, int v, int l)
{
	NODE *p;

	p = (NODE*)malloc(sizeof(NODE));
	strcpy(p->symb,s);
	cnt++;
	p->pos = cnt;
	p->addr = a;
	p->val = v;
	p->len = l;
	p->next = NULL;

	if(first==NULL)
		first=p;
	else
		last->next=p;

	last=p;
}

void display_symbtab()
{
	NODE *p;

	printf("#\tsymb\taddr\tval\tlen\n");

	p = first;
	while(p!=NULL)
	{
		printf("%d\t%s\t%d\t%d\t%d\n",
		   p->pos,p->symb,p->addr,p->val,p->len);

		p=p->next;
	}
}

NODE * search_symb(char *s)
{
	NODE *p;

	p = first;
	while(p!=NULL)
	{
		if(strcmp(p->symb,s)==0)
			return p;

		p=p->next;
	}

	return NULL;
}

char optab[][6]={"STOP","ADD","SUB","MULT",
		"MOVER","MOVEM","COMP","BC",
		"DIV","READ","PRINT"};

int search_op(char *s)
{
	int i;

	for(i=0;i<11;i++)
	{
		if(strcmp(optab[i],s)==0)
			return i;
	}

	return -1;
}

char regtab[][5]={"AREG","BREG","CREG","DREG"};

int search_reg(char *s)
{
	int i;
	for(i=0;i<4;i++)
	{
		if(strcmp(regtab[i],s)==0)
			return i;
	}

	return -1;
}

char adtab[][7]={"START","END",
		"ORIGIN","EQU","LTORG"};

int search_ad(char *s)
{
	int i;
	for(i=0;i<5;i++)
	{
		if(strcmp(adtab[i],s)==0)
			return i;
	}

	return -1;
}

int main()
{
	NODE *p;
	FILE *fp,*fp1;
	char fname[40],buff[80],t1[20],t2[20],t3[20],t4[20];
	int n,i,j,pc;

	printf("Enter source file name:");
	scanf("%s",fname);

	fp = fopen(fname,"r");
	if(fp==NULL)
	{
		printf("File %s not found.\n",fname);
		exit(1);
	}

	fp1 = fopen("temp.i","w");

	while(fgets(buff,80,fp)!=NULL)
	{
		n = sscanf(buff,"%s %s %s %s",t1,t2,t3,t4);





